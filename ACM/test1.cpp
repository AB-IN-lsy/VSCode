//#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template <class T> void _R(T &x)
{
    cin >> x;
}
void _R(int &x)
{
    scanf("%d", &x);
}
void _R(long long &x)
{
    scanf("%lld", &x);
}
void _R(double &x)
{
    scanf("%lf", &x);
}
void _R(char &x)
{
    scanf(" %c", &x);
}
void _R(char *x)
{
    scanf("%s", x);
}
template <class T> void _W(const T &x)
{
    cout << x;
}
void _W(const int &x)
{
    printf("%d", x);
}
void _W(const long long &x)
{
    printf("%lld", x);
}
void _W(const double &x)
{
    printf("%.16f", x);
}
void _W(const char &x)
{
    putchar(x);
}
void _W(const char *x)
{
    printf("%s", x);
}
string str[] = {"#*********#####*****##*##*****#***####*#****#*#*###**#########**###*####*#####*######*****#***######*#"
                "*#*############*##*###*#***#***************##*******#*****#***#*#####***#*********************###**###"
                "*###*#*###*#*#*######*###*#***#*###*#*###*#*#**********#**********##*#*#****##*####*##*###*##**###*###"
                "####*******##***###***####*####*##*****",
                "#*##**###*#########*##*##*###*#*#*###**#*###***###**#####*#####**##*###**####**######*#####*#########*"
                "**######*****#*###*###**#*#**####*####*########**###******##*##*#######*#*######*##*###**###*#*#*#*###"
                "*###*##*#*#*#*####*##**#**###*#**##**#*#**#*#**###**###*###*#*###*******#######*###*##*###*###*##*#*##"
                "########***#*##**##*#####*#*####*#*####",
                "#*##******#####**********###**##*#*##*##*###**####*#############*##*####*###*#*######*******##########"
                "*##*****#####*####*****#***#***************####*****#**#**##*##*######**#*#***##*##*#*#**###*##*##*###"
                "*###*###*############**#**###***#*#*###*#*#*#*****#****###*##*****#*#*##***########*###*#*############"
                "########*##*####**#*#####***#####**####",
                "#*##**###*#########*##*####**##*#*##**##*###***###**#####*#####**##*####*##*****#########*#*######*##*"
                "**######*****#*###*###*##*#**###**####*########**###******##*##*#########*#*#*##*##*##***###*#*#*#*###"
                "*#*#*###*#########*##*#*#*###*#*##**#####*#*#**#*##*#####*#######******####*###########*#*############"
                "########*#*#**###***####*###*###*#*####",
                "#*********#####*****##*##*****#***##*###****#*#*###**#########**###*##*****###*###*##*****#***###**#*#"
                "*#*############*##*###*#***#******####*****##*******#*****#***#*****##*##*****##*##***********###*****"
                "*#***###*#########*##*#*#*#***#*###*######*#*#*##*#*####***********#*###***########*####*############*"
                "****####**##**####***###*###*##*##*****"};
map<char, vector<string>> m;

string s[5];
vector<string> tmp;

int main()
{
    // freopen("","r",stdin);
    // freopen("","w",stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    string in = "08 3+2&/DK(:)|14.5{,*-=<H$6FE]B@IL?GTQOXUJY\";M}N~WRPZ9#S`!V'^_7%\\[A>C";
    for (int i = 0; i < in.size(); i++)
    {
        // l=i r=i*5-1
        for (int j = 0; j < 5; j++)
        {
            m[in[i]].push_back(str[j].substr(i * 5, 5));
        }
    }

    for (int i = 0; i < 5; i++)
    {
        cin >> s[i];
    }
    for (int i = 0; i < s[0].size(); i += 5)
    {
        tmp.clear();
        for (int j = 0; j < 5; j++)
        {
            tmp.push_back(s[j].substr(i, 5));
        }
        for (auto it : m)
        {
            vector<string> here = it.second;
            int flag = 1;
            for (int j = 0; j < 5; j++)
            {
                if (here[j] != tmp[j])
                {
                    flag = 0;
                }
            }
            if (flag)
            {
                cout << it.first;
                break;
            }
        }
    }
    return 0;
}